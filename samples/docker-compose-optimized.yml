version: "3.1"
services:
  postgres:
    image: postgres:12.0
    restart: always
    # IMPORTANT: shm_size must be larger than shared_buffers to prevent Docker shared memory errors
    shm_size: '2gb'
    environment:
      POSTGRES_USER: synapse
      POSTGRES_PASSWORD: "CHANGE_ME_STRONG_PASSWORD"
      POSTGRES_DB: synapse
      LANG: 'C'
      LANGUAGE: 'C'
      LC_ALL: 'C'
      LC_COLLATE: 'C'
      LC_CTYPE: 'C'
      ENCODING: "UTF8" 
      POSTGRES_INITDB_ARGS: "-E UTF8"
    # Performance-optimized PostgreSQL settings for 16GB system with 8GB available
    command: >
      postgres
      -c shared_buffers=1GB              # Main cache for frequently accessed data (default: 128MB)
      -c effective_cache_size=4GB        # Hint to query planner about OS cache, not actual allocation (default: 4GB)
      -c work_mem=64MB                    # Memory per sort/hash operation - critical for 73KB+ messages (default: 4MB)
      -c maintenance_work_mem=512MB       # Memory for VACUUM, CREATE INDEX - prevents vacuum issues (default: 64MB)
      -c max_connections=300              # Supports 80 Synapse connections + overhead (default: 100)
      -c random_page_cost=1.1             # Optimized for SSD, lower = favor index scans (default: 4.0 for HDD)
      -c checkpoint_completion_target=0.9 # Spread checkpoint writes over 90% of interval, reduces I/O spikes (default: 0.5)
      -c autovacuum_vacuum_scale_factor=0.05  # Vacuum when 5% of table changes, prevents bloat (default: 0.2 = 20%)
      -c min_wal_size=2GB                 # Minimum WAL size - reduces frequent WAL recycling (default: 80MB)
      -c max_wal_size=4GB                 # Maximum WAL size before checkpoint forced (default: 1GB)
      -c wal_buffers=32MB                 # WAL write buffer - improves write performance (default: -1 = 1/32 of shared_buffers)
      -c autovacuum_max_workers=4         # Parallel vacuum workers - faster cleanup (default: 3)
      -c autovacuum_analyze_scale_factor=0.02  # Analyze when 2% changes, keeps statistics fresh (default: 0.1 = 10%)
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:6.2.4-buster
    restart: always
    # Conservative Redis configuration - only setting memory limit
    command: >
      redis-server 
      --maxmemory 1gb                    # Limit Redis memory usage to prevent OOM
      --maxmemory-policy allkeys-lru     # When limit hit, evict least recently used keys
    expose: 
      - "6379"
    volumes:
      - ./redis_data:/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  tezos-synapse:
    # Update this to your new image version after building with updated homeserver.yaml
    image: airgapdocker/beacon-node:optimized
    restart: always
    depends_on:
      - postgres
      - redis
    ports:
      - "8008:8008"   # Main client/federation port
      - "8083:8083"   # Worker 1
      - "8084:8084"   # Worker 2
      - "8085:8085"   # Worker 3
      - "8086:8086"   # Worker 4
    environment:
      DB_HOST: postgres
      DB_USER: synapse
      DB_PASS: "CHANGE_ME_STRONG_PASSWORD"
      DB_NAME: synapse
      SERVER_NAME: "YOUR_SERVER_NAME.example.com"
      SIGNING_KEY: "YOUR_SIGNING_KEY"
      REGISTRATION_SHARED_SECRET: "CHANGE_ME_RANDOM_SECRET"
      SERVER_REGION: "your-region"
      # Optional: Sentry error tracking (NOTE: Requires additional setup - see docs/PERFORMANCE_IMPROVEMENTS.md)
      # SENTRY_DSN: "https://fc05bbc75d345906ed15de7d8ef76fc7@reporting.papers.tech/17"
    volumes:
      - ./synapse_data:/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"

# Optional: Add networks for better isolation
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16